/*!
 * BubbleUp
 * http://github.com/asaharan/bubbleUp
 * @licence MIT
*/
'use strict';

function Bit(side){this.side=side,this.value=0,this.x=0,this.y=0}function BitManager(){this.bits={},this.mainGrid=document.querySelector(".mainGrid"),this.setup()}function GameManager(gridManager,styleSheetManager,bitManager,masterLogic){this.gridManager=new gridManager,this.bitManager=new bitManager,this.masterLogic=masterLogic,this.styleSheetManager=new styleSheetManager,this.init()}function Grid(){this.events=[],this.grid=[],this.previousGrid=[],this.fixedTile=null,this.size=size,this.initialValue=initialValue,this.gridContainerOuter=document.querySelector(".gridContainerOuter"),this.gridContainerInner=document.querySelector(".gridContainerInner"),this.backgroundGrid=document.querySelector(".backgroundGrid"),this.mainGrid=document.querySelector(".mainGrid"),this.setup()}function Stylesheet(){this.size=size,this.width=width-2,this.minSpace=minSpace,this.setup()}function Tile(x,y,value){this.x=x,this.y=y,this.value=value,this.nextValue=null,this.classList=[],this.isVisible=!0,this.htmlNode=null}var size=3,game,initialValue=512,width=502,minSpace=10;window.requestAnimationFrame(function(){game=new GameManager(Grid,Stylesheet,BitManager)}),Bit.prototype.createHTMLBit=function(){var bit=document.createElement("div");return bit.setAttribute("class","bit "+this.side),bit},BitManager.prototype.setup=function(){this.bits.up=new Bit("up"),this.bits.right=new Bit("right"),this.bits.down=new Bit("down"),this.bits.left=new Bit("left");for(var bit in this.bits)this.mainGrid.appendChild(this.bits[bit].createHTMLBit())},GameManager.prototype.init=function(){this.gridManager.on("tileClick",this.play.bind(this))},GameManager.prototype.restart=function(){},GameManager.prototype.play=function(clickedTile){console.log(clickedTile,"clicked"),this.gridManager.removeTile(clickedTile)},Grid.prototype.setup=function(){var i,j;for(i=0;i<this.size;i++)for(j=0;j<this.size;j++)this.createTile({x:i,y:j},this.initialValue)},Grid.prototype.createTile=function(position,value){var tile=new Tile(position.x,position.y,value);tile.isVisible=!0,this.grid.push(tile),tile.makeHTMLNode()},Grid.prototype.applyChanges=function(){console.log(this.grid),this.grid.forEach(function(tile){tile.applyChanges()})},Grid.prototype.addTile=function(tile){tile.makeHTMLNode(),tile.htmlNode.addEventListener("click",this.onTileClick.bind(this)),this.mainGrid.appendChild(tile.htmlNode)},Grid.prototype.removeTile=function(tile){tile.isVisible=!1,this.applyChanges()},Grid.prototype.applyClasses=function(element,classes){element.setAttribute("class",classes.join(" "))},Array.prototype.diff=function(a){return this.filter(function(i){if(0==a.length)return!0;for(var x=0;x<a.length;x++)if(i.matchDummyTile(a[x]))return!1;return!0})},Grid.prototype.on=function(event,callback){this.events[event]||(this.events[event]=[]),this.events[event].push(callback)},Grid.prototype.emit=function(event,data){var callbacks=this.events[event];callbacks&&callbacks.forEach(function(callback){callback(data)})},Grid.prototype.onTileClick=function(event){this.emit("tileClick",this.findTileById(event.target.id))},Grid.prototype.findTileById=function(id){var tile=null;return this.grid.forEach(function(t){t.positionClass()==id&&(tile=t)}),tile},Stylesheet.prototype.setup=function(){this.generateTileWidth(),this.generateSpaceBetweenTiles(),this.createStyleSheet()},Stylesheet.prototype.generateTileWidth=function(){this.tileWidth=parseInt((this.width-this.minSpace)/this.size)-this.minSpace},Stylesheet.prototype.generateSpaceBetweenTiles=function(){this.spaceBetweenTiles=parseInt((this.width-this.size*this.tileWidth)/(this.size+1));var spaceOccupiedByTiles=this.tileWidth*this.size+this.spaceBetweenTiles*(this.size-1);this.mainGridWidth=spaceOccupiedByTiles,this.leftPadding=parseInt((this.width-spaceOccupiedByTiles)/2),this.rightPadding=this.width-this.leftPadding-spaceOccupiedByTiles},Stylesheet.prototype.createStyleSheet=function(){var styleSheet=document.createElement("style");styleSheet.setAttribute("id","flexStyleSheet"),styleSheet.setAttribute("type","text/css");var code=".gridContainerOuter{width:"+width+"px;height:"+width+"px}";code+=".gridContainerInner{width:"+this.width+"px;height:"+this.width+"px}",code+=".backgroundGrid,.mainGrid{left:"+this.leftPadding+"px;top:"+this.leftPadding+"px;width:"+this.mainGridWidth+"px;height:"+this.mainGridWidth+"px}",code+=".tile,.bit{width:"+this.tileWidth+"px;height:"+this.tileWidth+"px;line-height:"+this.tileWidth+"px}",code+=this.makeTileClassPositionStyle(),styleSheet.textContent="\n"+code+"\n",document.querySelector("head").appendChild(styleSheet)},Stylesheet.prototype.makeTileClassPositionStyle=function(){var i,j,code="";for(i=0;i<this.size;i++)for(j=0;j<this.size;j++)code+=this.tilePositionClass(i,j)+","+this.bitPositionClass(i,j)+"{left:"+(this.tileWidth+this.spaceBetweenTiles)*i+"px;top:"+(this.tileWidth+this.spaceBetweenTiles)*j+"px}";return code},Stylesheet.prototype.bitPositionClass=function(i,j){return".bit-"+i+"-"+j},Stylesheet.prototype.tilePositionClass=function(i,j){return".tile-"+i+"-"+j},Tile.prototype.position=function(){return{x:this.x,y:this.y}},Tile.prototype.makeDummyTile=function(tile){return this.x=tile.x,this.y=tile.y,this.value=tile.value,this.isVisible=tile.isVisible,this},Tile.prototype.matchDummyTile=function(tile){return this.x==tile.x&&this.y==tile.y&&this.value==tile.value&&this.isVisible==tile.isVisible},Tile.prototype.applyChanges=function(){console.log(this);var visibleClassName="visible",removedClassName="removed";this.isVisible?this.htmlNode.classList.add(removedClassName).remove(visibleClassName):this.htmlNode.classList.remove(removedClassName).add(visibleClassName),null!=this.nextValue&&(this.htmlNode.textContent=this.nextValue,this.value=this.nextValue,this.nextValue=null)},Tile.prototype.positionClass=function(){return"tile-"+this.x+"-"+this.y},Tile.prototype.makeHTMLNode=function(){var tileElement=document.createElement("div");this.htmlNode=tileElement,tileElement.textContent=this.value,tileElement.setAttribute("id",this.positionClass());var classes=["tile",this.positionClass(),"new"];this.applyClasses(classes)},Tile.prototype.applyClasses=function(classes){this.htmlNode.setAttribute("class",classes.join(" "))};
//# sourceMappingURL=game.min.js.map